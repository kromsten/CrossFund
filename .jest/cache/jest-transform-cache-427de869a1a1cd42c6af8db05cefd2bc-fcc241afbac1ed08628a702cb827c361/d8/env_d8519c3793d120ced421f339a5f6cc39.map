{"version":3,"names":["_axios","_interopRequireDefault","require","_child_process","_types","_wait","_fs","_path","_crypto","obj","__esModule","default","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","arguments","apply","err","undefined","CONTRACTS_PATH","process","env","BLOCKS_COUNT_BEFORE_START","parseInt","alreadySetUp","getContractBinary","_ref","fileName","fsPromise","readFile","path","_x","exports","getContractsHashes","_ref2","hashes","Object","keys","NeutronContract","binary","crypto","createHash","update","digest","setup","_ref3","host1","host2","console","log","NO_DOCKER","execSync","e","NO_REBUILD","showVersions","showContractsHashes","waitForHTTP","NO_WAIT_CHANNEL1","waitForChannel","NO_WAIT_HTTP2","NO_WAIT_CHANNEL2","NO_WAIT_DELAY","wait","_x2","_x3","_ref4","host","length","concat","timeout","start","Date","now","r","axios","get","status","Error","_ref5","data","channels","every","channel","counterparty","channel_id","servicesAndGetVersionCommandsText","service","version","toString","trim","servicesAndGetVersionCommandsJson","versionLong","JSON","parse","_ref6","result"],"sources":["env.ts"],"sourcesContent":["import axios from 'axios';\nimport { execSync } from 'child_process';\nimport { ChannelsList, NeutronContract } from './types';\nimport { wait } from './wait';\nimport { promises as fsPromise } from 'fs';\nimport path from 'path';\nimport crypto from 'crypto';\n\nconst CONTRACTS_PATH = process.env.CONTRACTS_PATH || './contracts';\n\nconst BLOCKS_COUNT_BEFORE_START = process.env.BLOCKS_COUNT_BEFORE_START\n  ? parseInt(process.env.BLOCKS_COUNT_BEFORE_START, 10)\n  : 10;\n\nlet alreadySetUp = false;\n\nexport const getContractBinary = async (fileName: string): Promise<Buffer> =>\n  fsPromise.readFile(path.resolve(CONTRACTS_PATH, fileName));\n\nexport const getContractsHashes = async (): Promise<Record<string, string>> => {\n  const hashes = {};\n  for (const key of Object.keys(NeutronContract)) {\n    const binary = await getContractBinary(NeutronContract[key]);\n    hashes[NeutronContract[key]] = crypto\n      .createHash('sha256')\n      .update(binary)\n      .digest('hex');\n  }\n  return hashes;\n};\n\nexport const setup = async (host1: string, host2: string) => {\n  if (alreadySetUp) {\n    console.log('already set up');\n    return;\n  }\n  if (process.env.NO_DOCKER) {\n    console.log('NO_DOCKER ENV provided');\n    return;\n  }\n  try {\n    execSync(`cd setup && make stop-cosmopark`);\n    // eslint-disable-next-line no-empty\n  } catch (e) {}\n  console.log('Starting container... it may take long');\n  if (process.env.NO_REBUILD) {\n    console.log('NO_REBUILD ENV provided. do not rebuild docker images');\n    execSync(`cd setup && make start-cosmopark-no-rebuild`);\n  } else {\n    execSync(`cd setup && make start-cosmopark`);\n  }\n  showVersions();\n  await showContractsHashes();\n  await waitForHTTP(host1);\n  !process.env.NO_WAIT_CHANNEL1 && (await waitForChannel(host1));\n  !process.env.NO_WAIT_HTTP2 && (await waitForHTTP(host2));\n  !process.env.NO_WAIT_CHANNEL2 && (await waitForChannel(host2));\n  !process.env.NO_WAIT_DELAY && (await wait(20)); // FIXME: this hardcoded sleep is here to wait until hermes is fully initialized.\n  //                        proper fix would be to monitor hermes status events.\n  alreadySetUp = true;\n};\n\nconst waitForHTTP = async (\n  host = 'http://127.0.0.1:1317',\n  path = `blocks/${BLOCKS_COUNT_BEFORE_START}`,\n  timeout = 280000,\n) => {\n  const start = Date.now();\n  while (Date.now() < start + timeout) {\n    try {\n      const r = await axios.get(`${host}/${path}`, {\n        timeout: 1000,\n      });\n      if (r.status === 200) {\n        return;\n      }\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n    await wait(1);\n  }\n  throw new Error('No port opened');\n};\n\nexport const waitForChannel = async (\n  host = 'http://127.0.0.1:1317',\n  timeout = 100000,\n) => {\n  const start = Date.now();\n\n  while (Date.now() < start + timeout) {\n    try {\n      const r = await axios.get<ChannelsList>(\n        `${host}/ibc/core/channel/v1/channels`,\n        {\n          timeout: 1000,\n        },\n      );\n      if (\n        r.data.channels.length > 0 &&\n        r.data.channels.every(\n          (channel) => channel.counterparty.channel_id !== '',\n        )\n      ) {\n        await wait(20);\n        return;\n      }\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n    await wait(1);\n  }\n\n  throw new Error('No channel opened');\n};\n\nexport const showVersions = () => {\n  if (process.env.NO_DOCKER) {\n    console.log('Cannot get versions since NO_DOCKER ENV provided');\n    return;\n  }\n  const servicesAndGetVersionCommandsText = [\n    [\n      'ICQ relayer',\n      'cd setup && docker compose exec relayer neutron_query_relayer version',\n    ],\n    ['hermes', 'cd setup && docker compose exec hermes hermes version'],\n    ['Integration tests', \"git log -1 --format='%H'\"],\n  ];\n  for (const service of servicesAndGetVersionCommandsText) {\n    try {\n      const version = execSync(service[1]).toString().trim();\n      console.log(`${service[0]} version:\\n${version}`);\n    } catch (err) {\n      console.log(`Cannot get ${service[0]} version:\\n${err}`);\n    }\n  }\n  const servicesAndGetVersionCommandsJson = [\n    [\n      'neutrond',\n      'cd setup && docker compose exec neutron-node /go/bin/neutrond version --long -o json',\n    ],\n    [\n      'gaiad',\n      'cd setup && docker compose exec gaia-node gaiad version --long 2>&1 -o json',\n    ],\n  ];\n  for (const service of servicesAndGetVersionCommandsJson) {\n    try {\n      const versionLong = JSON.parse(execSync(service[1]).toString().trim());\n      console.log(\n        `${service[0]} version:\\nversion: ${versionLong['version']}\\ncommit: ${versionLong['commit']}`,\n      );\n    } catch (err) {\n      console.log(`Cannot get ${service[0]} version:\\n${err}`);\n    }\n  }\n};\n\nconst showContractsHashes = async () => {\n  const hashes = await getContractsHashes();\n\n  let result = 'Contracts hashes:\\n';\n  for (const key of Object.keys(hashes)) {\n    result = result.concat(`${hashes[key]} ${key}\\n`);\n  }\n\n  console.log(result);\n};\n"],"mappings":"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"}